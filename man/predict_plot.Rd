% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ztils.R
\name{predict_plot}
\alias{predict_plot}
\title{Prediction Plot}
\usage{
predict_plot(
  mod,
  dat,
  rvar,
  pvar,
  grp = NULL,
  len = 50,
  interval = "confidence",
  correction = "normal"
)
}
\arguments{
\item{mod}{the model used for predictions}

\item{dat}{the data used to render the "real" points on the graph and for aggregating groups to determine prediction limits (should be the same as the data used in the model)}

\item{rvar}{the response variable (y variable / variable the model is predicting)}

\item{pvar}{the predictor variable (x variable / variable the model will predict against)}

\item{grp}{the group; should be a factor; one response curve will be made for each group}

\item{len}{the length of the variable over which to predict (higher = more resolution, essentially)}

\item{interval}{the type of interval to predict ("confidence" or "prediction")}

\item{correction}{the type of correction to apply to the prediction ("normal", "exponential", or "logit")}
}
\value{
A plot showing the real data and the model's predicted 95\% CI or PI over a number of groups, with optional corrections.
}
\description{
This function uses a model, dataframe, and supplied predictor,response, and group variables to make predictions
based off the model over a user-defined length with options to predict over the confidence or prediction
interval and to apply a mathematical correction. You can also choose the color palette.
}
\details{
This function natively uses ggplot2 to graph the plot.
This is because ggplot2 is beautiful and easy, and I hate making ugly (sorry) base R graphs.

This function natively uses the scico package color palettes. I highly recommend scico for easy to use,
colorblind-accessible palettes.
}
