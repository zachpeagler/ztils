[{"path":"https://zachpeagler.github.io/ztils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zach Peagler. Author, maintainer.","code":""},{"path":"https://zachpeagler.github.io/ztils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Peagler Z (2025). ztils: ztils. R package version 0.0.3.000, https://zachpeagler.github.io/ztils/.","code":"@Manual{,   title = {ztils: ztils},   author = {Zach Peagler},   year = {2025},   note = {R package version 0.0.3.000},   url = {https://zachpeagler.github.io/ztils/}, }"},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"ztils","dir":"","previous_headings":"","what":"ztils","title":"ztils","text":"Various utilities meant aid speeding common statistical operations, : - removing outliers extremes - generating probability density cumulative distribution graphs ggplot2 - running one-sample Kolmogorov-Smirnov tests multiple distributions - generating prediction plots ggplot2 - scaling data performing principal component analysis (PCA) - plotting PCA ggplot2","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ztils","text":"CRAN yet, working . install development version: {r} remotes::install_github('zachpeagler/ztils')","code":""},{"path":[]},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"description","dir":"","previous_headings":"no_outliers()","what":"Description","title":"ztils","text":"function works keeping rows dataframe containing variable values within quartiles +- 1.5 times interquartile range.","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"usage","dir":"","previous_headings":"no_outliers()","what":"Usage","title":"ztils","text":"function defaults, entirely dependent user input. ```{r} no_outliers(data, var ) isn’t great example iris dataset contain statistical outliers.","code":"### Arguments - **data**: the dataframe to remove rows containing outliers of the target variable - **var**: the variable to calculate outliers against  ### Returns Returns the specified dataframe **data** minus the rows containing outliers in the **var** variable.  ### Examples: ```{r} no_outliers(iris, Sepal.Length)"},{"path":[]},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"description-1","dir":"","previous_headings":"no_extremes()","what":"Description","title":"ztils","text":"function works keeping rows dataframe containing variable values within quartiles +- 3.0 times interquartile range.","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"usage-1","dir":"","previous_headings":"no_extremes()","what":"Usage","title":"ztils","text":"function defaults, entirely dependent user input. ```{r} no_extremes(data, var ) isn’t great example iris dataset contain statistical outliers.","code":"### Arguments - **data**: the dataframe to remove rows containing outliers of the target variable - **var**: the variable to calculate outliers against  ### Returns Returns the specified dataframe **data** minus the rows containing extremes in the **var** variable.  ### Examples: ```{r} no_extremes(iris, Sepal.Length)"},{"path":[]},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"description-2","dir":"","previous_headings":"multiPDF_cont()","what":"Description","title":"ztils","text":"function gets probability density function (PDF) selected distributions continuous variables. Possible distributions include combination “normal”, “lognormal”, “gamma”, “exponential”, “” (just uses prior distributions). Note non-negative numbers supported lognormal gamma distributions. Feeding function negative number distributions selected result error.","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"usage-2","dir":"","previous_headings":"multiPDF_cont()","what":"Usage:","title":"ztils","text":"{r} multiPDF_cont(var,                seq_length = 50,                distributions = \"\"               )","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"returns","dir":"","previous_headings":"multiPDF_cont()","what":"Returns","title":"ztils","text":"function returns dataframe row number equal seq_length containing real density probability density function var selected distributions.","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"arguments","dir":"","previous_headings":"multiPDF_cont()","what":"Arguments","title":"ztils","text":"default default 50 default “”","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"examples","dir":"","previous_headings":"multiPDF_cont()","what":"Examples","title":"ztils","text":"``` {r} multiPDF_cont(iris$Petal.Length) multiPDF_cont(iris$Sepal.Length, 100, c(“normal”, “lognormal”))","code":"## multiPDF_plot()  ### Description This function extends **multiPDF_cont** and gets the probability density functions (PDFs) for selected distributions against **continuous**, **non-negative** numbers. Possible distributions include any combination of \"normal\", \"lognormal\", \"gamma\", \"exponential\", and \"all\" (which just uses all of the prior distributions). It then plots this using **ggplot2** and a **scico** palette, using **var_name** for the plot labeling, if specified. If not specified, it will use **var** instead.  ### Usage ```{r} multiPDF_plot(var,               seq_length = 50,               distributions = \"all\",               palette = \"oslo\",               var_name = NULL               )"},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"returns-1","dir":"","previous_headings":"multiPDF_cont()","what":"Returns","title":"ztils","text":"plot showing PDF selected variable selected distributions selected sequence length.","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"arguments-1","dir":"","previous_headings":"multiPDF_cont()","what":"Arguments","title":"ztils","text":"var: variable get PDF seq_length: length fit distribution distributions: distributions fit var palette: scico palette use graph, distribution corresponding color. possible palettes, call scico_palette_names(). var_name: name use title x axis label plot.","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"examples-1","dir":"","previous_headings":"multiPDF_cont()","what":"Examples","title":"ztils","text":"```{r} multiPDF_plot(iris$Sepal.Length) multiPDF_plot(iris$Sepal.Length, length = 100, distributions = c(“normal”, “lognormal”, “gamma”), palette = “bilbao”, var_name = “Sepal Length (cm)” )","code":"<br>  ### multiCDF_cont()  ### Description This function gets the cumulative distribution function (CDF) for selected distributions against **continuous** variables. Possible distributions include any combination of \"normal\", \"lognormal\", \"gamma\", \"exponential\", and \"all\" (which just uses all of the prior distributions).  > Note that only **non-negative** numbers are supported by the lognormal and gamma distributions. Feeding this function a negative number with those distributions selected will result in an error.  ### Usage: ```{r} multiCDF_cont(var,               seq_length = 50,               distributions = \"all\"               )"},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"returns-2","dir":"","previous_headings":"multiPDF_cont()","what":"Returns","title":"ztils","text":"function returns dataframe row number equal seq_length containing real density probability density function var selected distributions.","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"arguments-2","dir":"","previous_headings":"multiPDF_cont()","what":"Arguments","title":"ztils","text":"default default 50 default “”","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"examples-2","dir":"","previous_headings":"multiPDF_cont()","what":"Examples","title":"ztils","text":"``` {r} multiCDF_cont(iris$Petal.Length) multiCDF_cont(iris$Sepal.Length, 100, c(“normal”, “lognormal”) )","code":"## multiCDF_plot()  ### Description This function extends **multiCDF_cont** and gets the cumulative distribution functions (CDFs) for selected distributions against **continuous**, **non-negative** numbers. Possible distributions include any combination of \"normal\", \"lognormal\", \"gamma\", \"exponential\", and \"all\" (which just uses all of the prior distributions). It then plots this using **ggplot2** and a **scico** palette, using **var_name** for the plot labeling, if specified. If not specified, it will use **var** instead.  ### Usage ```{r} multiCDF_plot(var,               seq_length = 50,               distributions = \"all\",               palette = \"oslo\",               var_name = NULL               )"},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"returns-3","dir":"","previous_headings":"multiPDF_cont()","what":"Returns","title":"ztils","text":"plot showing CDF selected variable selected distributions selected sequence length.","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"arguments-3","dir":"","previous_headings":"multiPDF_cont()","what":"Arguments","title":"ztils","text":"var: variable get CDF seq_length: length fit distribution distributions: distributions fit var palette: scico palette use graph, distribution corresponding color. possible palettes, call scico_palette_names(). var_name: name use title x axis label plot.","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"examples-3","dir":"","previous_headings":"multiPDF_cont()","what":"Examples","title":"ztils","text":"```{r} multiCDF_plot(iris$Sepal.Length) multiCDF_plot(iris$Sepal.Length, length = 100, distributions = c(“normal”, “lognormal”, “gamma”), palette = “bilbao”, var_name = “Sepal Length (cm)” ) Note: using “lognormal” “gamma” distributions, target variable must non-negative.","code":"<br>  ## multiKS_cont()  ### Description This function gets the distance and p-value from a one-sample Kolmogorov-Smirnov (KS) test for selected distributions against a continous input variable. Possible distributions include \"normal\", \"lognormal\", \"gamma\", \"exponential\", and \"all\".  ### Usage ```{r} multiKS_cont(var,              distributions = \"all\"              )"},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"arguments-4","dir":"","previous_headings":"multiPDF_cont()","what":"Arguments","title":"ztils","text":"var: variable perform one-sample KS tests distributions: distributions test ","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"returns-4","dir":"","previous_headings":"multiPDF_cont()","what":"Returns","title":"ztils","text":"Returns dataframe distance p-value performed KS test. distance relative metric similarity. p-value > 0.05 indicates target variable’s distribution significantly different specified distribution.","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"examples-4","dir":"","previous_headings":"multiPDF_cont()","what":"Examples","title":"ztils","text":"```{r} multiKS_cont(iris$Sepal.Length) multiKS_cont(iris$Sepal.Length, c(“normal”, “lognormal”))","code":"<br>    ## pca_plot()  ### Description This function performs a principal component analysis (PCA) for the selected **pcavars** with the option to automatically scale the variables. It then graphs PC1 on the x axis and PC2 on the y-axis using *ggplot2*, coloring the graph with a *scico* palette over the specified **groups**. This is similar to the *biplot* command from the *stats* package, but performs all the steps required in graphing a PCA for you.  ### Usage ```{r} pca_plot(group,          pcavars,          scaled = FALSE,          palette = \"oslo          )"},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"arguments-5","dir":"","previous_headings":"multiPDF_cont()","what":"Arguments","title":"ztils","text":"group: group column, used assigning colors. pcavars: variables (columns) perform principal component analysis . explanatory variables response variables. scaled: boolean (TRUE FALSE) indicated pcavars already scaled scaled function. palette: scico palette used color graph. possible palettes, call scico_palette_names(). non-scico palettes desired, palette can overridden scale_color scale_fill functions.","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"returns-5","dir":"","previous_headings":"multiPDF_cont()","what":"Returns","title":"ztils","text":"ggplot object showing PC1 x axis PC2 y axis, colored group vectors labels showing individual pca variables.","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"examples-5","dir":"","previous_headings":"multiPDF_cont()","what":"Examples","title":"ztils","text":"```{r} pca_plot(iris$Species, iris[,c(1:4)]) pca_plot(iris$Species, iris[,c(1:4)], FALSE, “bilbao”)","code":"<br>   ## pca_data()  ### Description This function performs a principal component analysis (PCA) on the specified variables, **pcavars** and attaches the resulting principal components to the specified dataframe, **data**, with optional variable scaling.  ### Usage ```{r} pca_data(data,          pcavars,          scaled = FALSE          )"},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"arguments-6","dir":"","previous_headings":"multiPDF_cont()","what":"Arguments","title":"ztils","text":"data: dataframe attach principal components . pcavars: variables use principal component analysis. scaled: logical value (TRUE FALSE) indicating pcavars already scaled scaled function.","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"returns-6","dir":"","previous_headings":"multiPDF_cont()","what":"Returns","title":"ztils","text":"Returns dataframe principal components additional columns.","code":""},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"examples-6","dir":"","previous_headings":"multiPDF_cont()","what":"Examples","title":"ztils","text":"{r} pca_data(iris, iris[,c(1:4)], FALSE)","code":""},{"path":[]},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"description-3","dir":"","previous_headings":"predict_plot()","what":"Description","title":"ztils","text":"function performs prediction based supplied model, graphs using ggplot2. Options available predicting based confidence prediction interval, well applying corrections, exponential logistic. like alter function reduce number required inputs, information available model call, ’s work progress. ### Usage ```{r} predict_plot(mod, data, rvar, pvar, group = NULL, length = 50, interval = “confidence”, correction = “normal”, palette = “oslo” )","code":"### Arguments - **mod**: A univariate linear model to base predictions on. - **data**: The dataframe used in the model. Will be used to pull variables for plotting. - **rvar**: The response variable (y-axis), must be the same as the one in the model - **pvar**: The predictor variable (x-axis), must be the same as the one in the model. - **group**: An optional grouping variable. If a group is present, separate predictions will be made for each group. - **length**: The length to predict over. A longer length will result in more precision. - **interval**: Tells the function to predict over either the confidence interval or the prediction interval.   - \"confidence\" or \"prediction\" - **correction**: If you log transform or logit transform the variables in the model, you can choose to apply a correction to the predicted output to reverse that transformation.   - \"normal\", \"exponential\", or \"logit\" - **palette**: A *scico* palette used to color the graph. For all possible palettes, call **scico_palette_names()**. If non-scico palettes are desired, the palette can be overridden with scale_color and scale_fill functions.  ### Returns Returns a plot with the observed (real) data plotted as points and the prediction plotted as lines, with a 95% confidence or prediction interval.  > This function has a known issue with the colors on ungrouped predictions being kind of funky, as the function uses the predictor variable (x-axis) for the color, which works for the actual data (points), but doesn't translate well to the predicted lines and ribbon.  ### Examples ```{r} mod1 <- lm(Sepal.Length ~ Petal.Length + Species, data = iris)  predict_plot(mod1, iris, Sepal.Length, Petal.Length, Species)"},{"path":"https://zachpeagler.github.io/ztils/index.html","id":"bug-reporting","dir":"","previous_headings":"","what":"Bug reporting","title":"ztils","text":"find bugs, please report https://github.com/zachpeagler/ztils/issues.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/glm_pseudoR2.html","id":null,"dir":"Reference","previous_headings":"","what":"glm_pseudoR2 — glm_pseudor2","title":"glm_pseudoR2 — glm_pseudor2","text":"function calculating pseudo R^2 glm","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/glm_pseudoR2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glm_pseudoR2 — glm_pseudor2","text":"","code":"glm_pseudor2(mod)"},{"path":"https://zachpeagler.github.io/ztils/reference/glm_pseudoR2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"glm_pseudoR2 — glm_pseudor2","text":"mod model calculate pseudo R^2","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/glm_pseudoR2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"glm_pseudoR2 — glm_pseudor2","text":"pseudo R^2 value model","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiCDF_cont.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple Cumulative Distribution Functions for Continuous Variables — multicdf_cont","title":"Multiple Cumulative Distribution Functions for Continuous Variables — multicdf_cont","text":"function gets cumulative distribution function selected distributions continuous, non-negative input variable. Possible distributions include \"normal\", \"lognormal\", \"gamma\", \"exponential\", \"cauchy\", \"t\", \"weibull\", \"logistic\", \"\".","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiCDF_cont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple Cumulative Distribution Functions for Continuous Variables — multicdf_cont","text":"","code":"multicdf_cont(var, seq_length = 50, distributions = \"all\")"},{"path":"https://zachpeagler.github.io/ztils/reference/multiCDF_cont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple Cumulative Distribution Functions for Continuous Variables — multicdf_cont","text":"var variable get CDF seq_length length sequence fit distribution distributions distributions fit x ","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiCDF_cont.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple Cumulative Distribution Functions for Continuous Variables — multicdf_cont","text":"dataframe x, real density, pdf desired distributions length (nrows) equal seq_length +1.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiCDF_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"multicdf_plot — multicdf_plot","title":"multicdf_plot — multicdf_plot","text":"function version multicdf_plot MultiFitR package customized use formatting like. However, formatting uses several packages want include base MultiFitR MultiFitRgg packages. (scico)","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiCDF_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multicdf_plot — multicdf_plot","text":"","code":"multicdf_plot(   var,   seq_length = 50,   distributions = \"all\",   palette = \"oslo\",   var_name = NULL )"},{"path":"https://zachpeagler.github.io/ztils/reference/multiCDF_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"multicdf_plot — multicdf_plot","text":"var variable plot CDFs seq_length number points fit x distributions distributions fit x palette color palette use graph var_name variable name use x","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiCDF_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"multicdf_plot — multicdf_plot","text":"plot showing CDF selected variable selected distributions selected sequence length","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiKS_cont.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple Kolmogorov-Smirnov Tests for Continuous Variables — multiks_cont","title":"Multiple Kolmogorov-Smirnov Tests for Continuous Variables — multiks_cont","text":"function gets distance p-value Kolmogorov-smirnov test selected distributions continuous input variable. Possible distributions include \"normal\", \"lognormal\", \"gamma\", \"exponential\", \"\".","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiKS_cont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple Kolmogorov-Smirnov Tests for Continuous Variables — multiks_cont","text":"","code":"multiks_cont(var, distributions = \"all\")"},{"path":"https://zachpeagler.github.io/ztils/reference/multiKS_cont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple Kolmogorov-Smirnov Tests for Continuous Variables — multiks_cont","text":"var variable perform ks tests distributions distributions test x ","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiKS_cont.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple Kolmogorov-Smirnov Tests for Continuous Variables — multiks_cont","text":"dataframe distance p value performed ks test","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiPDF_cont.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple Proportional Density Functions for Continuous Variables — multipdf_cont","title":"Multiple Proportional Density Functions for Continuous Variables — multipdf_cont","text":"function gets proportional density functions selected distributions continuous, non-negative numbers. Possible distributions include \"normal\", \"lognormal\", \"gamma\", \"exponential\", \"\".","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiPDF_cont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple Proportional Density Functions for Continuous Variables — multipdf_cont","text":"","code":"multipdf_cont(var, seq_length = 50, distributions = \"all\")"},{"path":"https://zachpeagler.github.io/ztils/reference/multiPDF_cont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple Proportional Density Functions for Continuous Variables — multipdf_cont","text":"var variable get PDF. seq_length length sequence fit distribution distributions distributions fit x ","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiPDF_cont.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple Proportional Density Functions for Continuous Variables — multipdf_cont","text":"dataframe x, real density, pdf desired distributions length (nrows) equal seq_length +1.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiPDF_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"multipdf_plot — multipdf_plot","title":"multipdf_plot — multipdf_plot","text":"function version MultiPDF_plot MultiFitR package customized use formatting like. However, formatting uses several packages want include base MultiFitR MultiFitRgg packages.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiPDF_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multipdf_plot — multipdf_plot","text":"","code":"multipdf_plot(   var,   seq_length = 50,   distributions = \"all\",   palette = \"oslo\",   var_name = NULL )"},{"path":"https://zachpeagler.github.io/ztils/reference/multiPDF_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"multipdf_plot — multipdf_plot","text":"var variable plot PDFs seq_length number points fit x distributions distributions fit x palette color palette use graph var_name variable name use x. name provided, function grab column name provided x","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/multiPDF_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"multipdf_plot — multipdf_plot","text":"plot showing PDF selected variable selected distributions selected sequence length","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/no_extremes.html","id":null,"dir":"Reference","previous_headings":"","what":"No extremes — no_extremes","title":"No extremes — no_extremes","text":"function returns dataframe subsetted include observations beyond extremes specified variable.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/no_extremes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"No extremes — no_extremes","text":"","code":"no_extremes(data, var)"},{"path":"https://zachpeagler.github.io/ztils/reference/no_extremes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"No extremes — no_extremes","text":"data data subset var variable subset .","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/no_extremes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"No extremes — no_extremes","text":"dataframe without entries containing extremes selected variable.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/no_extremes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"No extremes — no_extremes","text":"Extremes defined quantiles +- 3 times interquartile range.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/no_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"No outliers — no_outliers","title":"No outliers — no_outliers","text":"function returns dataframe subsetted include observations beyond outliers specified variable.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/no_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"No outliers — no_outliers","text":"","code":"no_outliers(data, var)"},{"path":"https://zachpeagler.github.io/ztils/reference/no_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"No outliers — no_outliers","text":"data data subset var variable subset ","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/no_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"No outliers — no_outliers","text":"dataframe without entries containing outliers selected variable.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/no_outliers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"No outliers — no_outliers","text":"Outliers defined quantiles +- 1.5 times interquartile range.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/pca_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal Component Analysis Data — pca_data","title":"Principal Component Analysis Data — pca_data","text":"function uses dataframe, PCA variables, \"scaled\" boolean generate dataframe principal components columns.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/pca_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal Component Analysis Data — pca_data","text":"","code":"pca_data(data, pcavars, scaled = FALSE)"},{"path":"https://zachpeagler.github.io/ztils/reference/pca_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal Component Analysis Data — pca_data","text":"data dataframe add principal components . pcavars variables include principle component analysis scaled boolean (TRUE FALSE) indicating pcavars already scaled","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/pca_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal Component Analysis Data — pca_data","text":"plot showing PC1 x axis, PC2 y axis, colored group, vectors labels showing individual pca variables.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/pca_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal Component Analysis Plot — pca_plot","title":"Principal Component Analysis Plot — pca_plot","text":"function uses group, PCA variables, \"scaled\" boolean generate biplot.using ggplot2","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/pca_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal Component Analysis Plot — pca_plot","text":"","code":"pca_plot(group, pcavars, scaled = FALSE, palette = \"oslo\")"},{"path":"https://zachpeagler.github.io/ztils/reference/pca_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal Component Analysis Plot — pca_plot","text":"group group variable (column) pcavars variables include principle component analysis scaled boolean (TRUE FALSE) indicating pcavars already scaled palette color palette use plot, group assigned color.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/pca_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal Component Analysis Plot — pca_plot","text":"plot showing PC1 x axis, PC2 y axis, colored group, vectors labels showing individual pca variables.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/predict_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction Plot — predict_plot","title":"Prediction Plot — predict_plot","text":"function uses model, dataframe, supplied predictor,response, group variables make predictions based model user-defined length options predict confidence prediction interval apply mathematical correction. can also choose color palette.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/predict_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Plot — predict_plot","text":"","code":"predict_plot(   mod,   data,   rvar,   pvar,   group = NULL,   length = 50,   interval = \"confidence\",   correction = \"normal\",   palette = \"oslo\" )"},{"path":"https://zachpeagler.github.io/ztils/reference/predict_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Plot — predict_plot","text":"mod model used predictions data data used render \"real\" points graph aggregating groups determine prediction limits (data used model) rvar response variable (y variable / variable model predicting) pvar predictor variable (x variable / variable model predict ) group group; factor; one response curve made group length length variable predict (higher = resolution, essentially) interval type interval predict (\"confidence\" \"prediction\") correction type correction apply prediction (\"normal\", \"exponential\", \"logit\") palette color palette used color graph, group corresponding color","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/predict_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction Plot — predict_plot","text":"plot showing real data model's predicted 95% CI PI number groups, optional corrections.","code":""},{"path":"https://zachpeagler.github.io/ztils/reference/predict_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prediction Plot — predict_plot","text":"function natively uses ggplot2 graph plot. ggplot2 beautiful easy, hate making ugly (sorry) base R graphs. function natively uses scico package color palettes. highly recommend scico easy use, colorblind-accessible palettes.","code":""}]
